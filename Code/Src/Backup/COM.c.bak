/*
 * COM.c
 *
 *  Created on: Mar 13, 2020
 *      Author: Zening
 */


#include "main.h"
#include "COM.h"
#include "Sensor_task.h"
#include "string.h"
#include "stdlib.h"
#include "ICOM_CIV.h"
#include "Yaesu.h"
#include "Kenwood.h"
#include "SoftUART.h"
#include "LVGL_GUI.h"


void COM_init(COM_t *p, UART_HandleTypeDef *phuart, uint8_t* bufTX, size_t lenbufTX, uint8_t* bufRX, size_t lenbufRX)
{
	kfifo_static_init(&(p->FIFO_TX), bufTX, lenbufTX);
	kfifo_static_init(&(p->FIFO_RX), bufRX, lenbufRX);
	p->phuart = phuart;
}


void COM_IRQHandler(COM_t* p)
{
	uint32_t isrflags   = (p->phuart->Instance->SR);
	uint32_t cr1its     = (p->phuart->Instance->CR1);
	uint32_t cr3its     = (p->phuart->Instance->CR3);
	uint8_t c;

	// TXE set
	if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
	{
		if(__kfifo_get(&(p->FIFO_TX), &c, 1U) > 0)
		{
			p->phuart->Instance->DR = c;
		}
		else // FIFO depleted
			COM_DISABLE_TXE(*(p->phuart));

	}
}


size_t COM_send_message(COM_t*p , const uint8_t* s, size_t n)
{
	size_t nSent = 0;
	if(s && n)
	{
		nSent = __kfifo_put(&(p->FIFO_TX), s, n);
	}
	if(nSent && p->phuart)
		COM_ENABLE_TXE(*(p->phuart));
	return nSent;
}





