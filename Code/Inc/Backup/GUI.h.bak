/*
 * GUI.h
 *
 *  Created on: Mar 11, 2020
 *      Author: Zening
 */

#ifndef GUI_H_
#define GUI_H_
#include "main.h"
#include "R61408.h"
// redraw function general type
typedef void (*func_redraw_t)(void*);

typedef uint16_t Color;

typedef struct
{
	void* derived; // pointer to the derived type
	func_redraw_t redraw;
} GUI_Widget;


typedef struct
{
	uint16_t x_begin;
	uint16_t y_begin;
	uint16_t width;
	uint16_t height;
	Color fill;
	// default
	bool need_redraw;
	// virtual functions
	func_redraw_t redraw;
} GUI_Rect;

void GUI_Init_Rect(GUI_Rect* widget, uint16_t x_begin, uint16_t y_begin,
		uint16_t width, uint16_t height, Color fill);
void GUI_Redraw_Rect(void *v_widget);

typedef struct
{
	uint16_t x_begin;
	uint16_t y_begin;
	uint16_t width;
	uint16_t height;
	uint16_t shadow_distance;
	Color foreground;
	Color shadow;
	// derived variables
	bool need_redraw;
	func_redraw_t redraw;
} GUI_Popup_Window;

void GUI_Init_Popup_Window(GUI_Popup_Window* widget, uint16_t x_begin,
		uint16_t y_begin, uint16_t width, uint16_t height,
		uint16_t shadow_distance, Color foreground, Color shadow);

typedef struct
{
	uint16_t x_begin;
	uint16_t y_begin;
	uint16_t width;
	uint16_t height;
	const uint16_t* bitmap;
	// default
	bool need_redraw;
	// virtual funcs
	func_redraw_t redraw;
} GUI_Bitmap;
void GUI_Init_Bitmap(GUI_Bitmap* widget, uint16_t x_begin, uint16_t y_begin,
		uint16_t width, uint16_t height, const uint16_t* bitmap);
void GUI_Set_Bitmap(GUI_Bitmap* widget, uint16_t width, uint16_t height,
		const uint16_t* bitmap);
void GUI_Redraw_Bitmap(void* v_widget);

typedef enum
{
	LEFT_JUSTIFIED, CENTER_JUSTIFIED, RIGHT_JUSTIFIED
} Align;
typedef struct
{
	uint16_t x_begin;
	uint16_t y_begin;
	uint16_t width;
	uint16_t height;
	uint16_t len_text;
	uint8_t spacing;
	int8_t offset_y;
	const uint8_t** charset;
	const char* text;
	Align align;
	Color stroke;
	Color background;
	// derived
	uint16_t width_text;
	uint16_t height_text;
	uint16_t x_begin_text;
	uint16_t y_begin_text;
	//default
	bool need_redraw;
	// virtual funcs
	func_redraw_t redraw;
} GUI_TextBoxH;

void GUI_Init_TextBoxH(GUI_TextBoxH* widget, uint16_t x_begin, uint16_t y_begin,
		uint16_t width, uint16_t height, uint16_t len_text, uint8_t spacing,
		int8_t offset_y, uint8_t** charset, const char* text, Align align,
		Color stroke, Color background);
void GUI_Set_Text_TextBoxH(GUI_TextBoxH *widget, uint16_t len_text,
		const char* text);
void GUI_Get_Text_Size_TextBoxH(GUI_TextBoxH *widget, uint16_t len_text,
		const char* text, uint16_t* width, uint16_t* height);
void GUI_Redraw_TextBoxH(void* v_widget);

typedef struct
{
	uint16_t x_begin;
	uint16_t y_begin;
	uint16_t width;
	uint16_t height;
	uint16_t thickness_falling_bar;
	float progress; // 0-1.0f
	float threshold_warning; // 0-1.0f
	float progress_falling_bar; // 0-1.0f
	Color background;
	Color color_normal;
	Color color_warning;
	Color color_bar;
	// derived variables
	uint16_t x_end;
	uint16_t y_end;
	uint16_t len_warning; // the X-position where warning section begins
	bool need_redraw;
	func_redraw_t redraw;
} GUI_ProgressBarH;

void GUI_Init_ProgressBarH(GUI_ProgressBarH* widget, uint16_t x_begin,
		uint16_t y_begin, uint16_t width, uint16_t height,
		uint16_t thickness_falling_bar, float threshold_warning,
		Color background, Color color_normal, Color color_warning,
		Color color_bar);
void GUI_Set_Progress_ProgressBarH(GUI_ProgressBarH* widget, float progress,
		float progress_bar);
void GUI_Redraw_ProgressBarH(void* v_widget);

void GUI_Redraw_Popup_Window(void* v_widget);
#endif /* GUI_H_ */
